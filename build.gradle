plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'application'
    id 'jacoco'
}

group = 'br.com.acmattos'
version = '0.0.8-snapshot'

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = "21"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "21"
}

dependencies {
    //----------------- MAIN DEPENDENCIES -----------------//
    // Javalin Server
    implementation "io.javalin:javalin:3.10.1"
    implementation 'ch.qos.logback:logback-classic:1.0.13'
    implementation "io.javalin:javalin-openapi:3.10.1"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0'

    // JWT - auth0
    implementation 'com.auth0:java-jwt:4.4.0'

    // Koin
    implementation 'io.insert-koin:koin-core:3.1.2'

    // MongoDB - KMongo
    implementation 'org.litote.kmongo:kmongo:4.2.8'

    // Prometeus
    implementation "io.prometheus:simpleclient_httpserver:0.12.0"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'

    // ULID
    implementation "de.huxhorn.sulky:de.huxhorn.sulky.ulid:8.2.0"

    //----------------- TEST DEPENDENCIES -----------------//
    // AssertJ
    testImplementation "org.assertj:assertj-core:3.16.1"

    // Fuel
    implementation "com.github.kittinunf.fuel:fuel:2.3.1"

    // Koin
    implementation 'io.insert-koin:koin-test-junit5:2.2.2'

    // Kotest
    testImplementation 'io.kotest:kotest-runner-junit5:5.8.1'

    // Mockk
    testImplementation "io.mockk:mockk:1.13.10"
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('jacoco')
}

jacocoTestReport {
    dependsOn test
}

jar {
    manifest {
        attributes 'Main-Class': 'br.com.acmattos.hdc.Main'
    }

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
